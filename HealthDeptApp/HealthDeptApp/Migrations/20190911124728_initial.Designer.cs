// <auto-generated />
using System;
using HealthDeptApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthDeptApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190911124728_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("HealthDeptApp.Models.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("HireDate");

                    b.Property<string>("LastName");

                    b.Property<bool>("OnLongTermLeave");

                    b.Property<DateTime?>("SeparationDate");

                    b.HasKey("Id");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("HealthDeptApp.Models.Establishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("CategoryId");

                    b.Property<string>("City");

                    b.Property<DateTime?>("ClosedDate");

                    b.Property<int>("EmployeeCount");

                    b.Property<bool>("HasLiquorLicense");

                    b.Property<double>("Latitute");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<DateTime>("OpenDate");

                    b.Property<string>("State");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Establishments");
                });

            modelBuilder.Entity("HealthDeptApp.Models.EstablishmentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CanHaveLiquorLicense");

                    b.Property<int>("InspectionFrequency");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EstablishmentCategories");
                });

            modelBuilder.Entity("HealthDeptApp.Models.HealthCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<int>("CategoryPosition");

                    b.Property<int>("Position");

                    b.Property<string>("Regulation");

                    b.HasKey("Id");

                    b.ToTable("HealthCodes");
                });

            modelBuilder.Entity("HealthDeptApp.Models.Inspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgentId");

                    b.Property<DateTime>("DateAssigned");

                    b.Property<DateTime?>("DateCompleted");

                    b.Property<DateTime?>("DateInspected");

                    b.Property<int>("EstablishmentId");

                    b.Property<string>("Report");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("EstablishmentId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("HealthDeptApp.Models.Establishment", b =>
                {
                    b.HasOne("HealthDeptApp.Models.EstablishmentCategory", "Category")
                        .WithMany("Establishments")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthDeptApp.Models.Inspection", b =>
                {
                    b.HasOne("HealthDeptApp.Models.Agent", "Agent")
                        .WithMany("Inspections")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HealthDeptApp.Models.Establishment", "Establishment")
                        .WithMany("Inspections")
                        .HasForeignKey("EstablishmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
